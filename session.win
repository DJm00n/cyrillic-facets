let SessionLoad = 1
if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
inoremap <F12> :e ++enc=utf-8
inoremap <F11> :e ++enc=cp866
inoremap <F10> :e ++enc=cp1251
inoremap <F4> :setlocal wrap! wrap?
inoremap <F3> :nohlsearch:echo 'nohlsearch'
inoremap <C-F2> :wall!
inoremap <F2> :w
inoremap <silent> <End> =SmartEnd('i')
inoremap <silent> <Home> =SmartHome('i')
map! <S-Insert> *
vmap  "*d
noremap <silent> ,t :call RemoveTrailingSpaces():echo 'trailing spaces removed'
nmap \ihn :IHN
nmap \is :IHS:A
nmap \ih :IHS
vmap _WF :call FormatLines(4, 'tw', '-')
nmap _WF :call FormatLines(4, 'tw', '-')
vmap _F :call FormatLines(4, 'tw')
nmap _F :call FormatLines(4, 'tw')
vmap _wf :Format 4 tw -
nmap _wf :Format 4 tw -
vmap _f :Format 4 tw
nmap _f :Format 4 tw
nmap gx <Plug>NetrwBrowseX
nnoremap <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cWORD>"),0)
vnoremap <F12> :e ++enc=utf-8
nnoremap <F12> :e ++enc=utf-8
vnoremap <F11> :e ++enc=cp866
nnoremap <F11> :e ++enc=cp866
vnoremap <F10> :e ++enc=cp1251
nnoremap <F10> :e ++enc=cp1251
vnoremap <F4> :setlocal wrap! wrap?
nnoremap <F4> :setlocal wrap! wrap?
vnoremap <F3> :nohlsearch:echo 'nohlsearch'
nnoremap <F3> :nohlsearch:echo 'nohlsearch'
vnoremap <C-F2> :wall!
nnoremap <C-F2> :wall!
vnoremap <F2> :w
nnoremap <F2> :w
vnoremap <silent> <End> :call SmartEnd('v')
nnoremap <silent> <End> :call SmartEnd('n')
vnoremap <silent> <Home> :call SmartHome('v')
nnoremap <silent> <Home> :call SmartHome('n')
map <S-F12> :!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .
vmap <C-Del> "*d
vmap <S-Del> "*d
vmap <C-Insert> "*y
vmap <S-Insert> "-d"*P
nmap <S-Insert> "*P
inoremap <expr>  omni#cpp#maycomplete#Complete()
inoremap <expr> . omni#cpp#maycomplete#Dot()
inoremap <expr> : omni#cpp#maycomplete#Scope()
inoremap <expr> > omni#cpp#maycomplete#Arrow()
imap \ihn :IHN
imap \is :IHS:A
imap \ih :IHS
let &cpo=s:cpo_save
unlet s:cpo_save
set keymap=russian-jcukenwin
set autoindent
set autoread
set background=dark
set backspace=indent,eol,start
set encoding=utf-8
set expandtab
set fileencodings=utf-8,windows-1251,koi8-r,iso-8859-15
set guioptions=egmrL
set helplang=ru
set hidden
set hlsearch
set ignorecase
set iminsert=0
set imsearch=0
set incsearch
set infercase
set nojoinspaces
set laststatus=2
set listchars=tab:>-,trail:.,extends:>,precedes:<
set makeprg=mingw32-make
set omnifunc=omni#cpp#complete#Main
set ruler
set sessionoptions=blank,buffers,folds,globals,options,resize,sesdir,tabpages,winpos,winsize
set shiftround
set shiftwidth=2
set showmatch
set sidescroll=1
set smartcase
set smartindent
set softtabstop=2
set splitbelow
set statusline=%1*%m%*%2*%r%*%F%=\ Col:%3*%03v%*\ Ln:%3*%03l%*/%3*%03L%*\ File:%3*%{&filetype}%*-%3*%{&fileformat}%*Enc%3*%{&encoding}%*/%3*%{&fileencoding}%*%<
set tags=./tags,tags,W:\\system\\utils\\Vim\\ctags\\stl
set textwidth=74
set title
set virtualedit=all
set wildcharm=<Tab>
set wildmenu
set window=54
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
let Tlist_Max_Submenu_Items =  20 
let Tlist_WinWidth =  30 
let Tlist_Exit_OnlyWindow =  0 
let Tlist_Enable_Fold_Column =  1 
let Tlist_Close_On_Select =  0 
let Tlist_GainFocus_On_ToggleOpen =  0 
let Tlist_Use_SingleClick =  0 
let Tlist_WinHeight =  10 
let Tlist_File_Fold_Auto_Close =  1 
let Tlist_Auto_Open =  0 
let Tlist_Show_One_File =  0 
let Tlist_Auto_Highlight_Tag =  1 
let Tlist_Inc_Winwidth =  1 
let Tlist_Auto_Update =  1 
let Tlist_Display_Tag_Scope =  1 
let Tlist_Compact_Format =  1 
let OmniCpp_SelectFirstItem =  0 
let OmniCpp_MayCompleteDot =  1 
let OmniCpp_GlobalScopeSearch =  1 
let OmniCpp_MayCompleteArrow =  1 
let TagList_title = "__Tag_List__"
let Tlist_Use_Horiz_Window =  0 
let OmniCpp_LocalSearchDecl =  0 
let Tlist_Display_Prototype =  0 
let Tlist_Ctags_Cmd = "ctags"
let OmniCpp_DisplayMode =  0 
let OmniCpp_NamespaceSearch =  1 
let OmniCpp_ShowPrototypeInAbbr =  0 
let OmniCpp_MayCompleteScope =  0 
let Tlist_Highlight_Tag_On_BufEnter =  1 
let OmniCpp_ShowScopeInAbbr =  0 
let Tlist_Show_Menu =  0 
let Tlist_Max_Tag_Length =  10 
let OmniCpp_ShowAccess =  1 
let Tlist_Use_Right_Window =  1 
let Tlist_Process_File_Always =  0 
let Tlist_Sort_Type = "name"
silent only
exe "cd " . escape(expand("<sfile>:p:h"), ' ')
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +117 codecvt\codecvt_cp866.hpp
badd +1 test.cpp
badd +1 X:\temp\facet\codecvt\codecvt_cp866.hpp
badd +1 X:\temp\facet\test.cpp
badd +0 codecvt\codecvt_cp1251.hpp
args X:\temp\facet\codecvt\codecvt_cp866.hpp X:\temp\facet\test.cpp x:\devel\facet\codecvt\codecvt_cp1251.hpp
set lines=55 columns=155
winpos 9 7
edit codecvt\codecvt_cp1251.hpp
set splitbelow splitright
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
3argu
lnoremap <buffer> " –≠
lnoremap <buffer> # ‚Ññ
lnoremap <buffer> $ ;
lnoremap <buffer> & ?
lnoremap <buffer> ' —ç
lnoremap <buffer> , –±
lnoremap <buffer> . —é
lnoremap <buffer> / .
lnoremap <buffer> : –ñ
lnoremap <buffer> ; –∂
lnoremap <buffer> < –ë
lnoremap <buffer> > –Æ
lnoremap <buffer> ? ,
lnoremap <buffer> @ "
lnoremap <buffer> A –§
lnoremap <buffer> B –ò
lnoremap <buffer> C –°
lnoremap <buffer> D –í
lnoremap <buffer> E –£
lnoremap <buffer> F –ê
lnoremap <buffer> G –ü
lnoremap <buffer> H –†
lnoremap <buffer> I –®
lnoremap <buffer> J –û
let s:cpo_save=&cpo
set cpo&vim
lnoremap <buffer> K –õ
lnoremap <buffer> L –î
lnoremap <buffer> M –¨
lnoremap <buffer> N –¢
lnoremap <buffer> O –©
lnoremap <buffer> P –ó
lnoremap <buffer> Q –ô
lnoremap <buffer> R –ö
lnoremap <buffer> S –´
lnoremap <buffer> T –ï
lnoremap <buffer> U –ì
lnoremap <buffer> V –ú
lnoremap <buffer> W –¶
lnoremap <buffer> X –ß
lnoremap <buffer> Y –ù
lnoremap <buffer> Z –Ø
lnoremap <buffer> [ —Ö
lnoremap <buffer> ] —ä
lnoremap <buffer> ^ :
lnoremap <buffer> ` —ë
lnoremap <buffer> a —Ñ
lnoremap <buffer> b –∏
lnoremap <buffer> c —Å
lnoremap <buffer> d –≤
lnoremap <buffer> e —É
lnoremap <buffer> f –∞
lnoremap <buffer> g –ø
lnoremap <buffer> h —Ä
lnoremap <buffer> i —à
lnoremap <buffer> j –æ
lnoremap <buffer> k –ª
lnoremap <buffer> l –¥
lnoremap <buffer> m —å
lnoremap <buffer> n —Ç
lnoremap <buffer> o —â
lnoremap <buffer> p –∑
lnoremap <buffer> q –π
lnoremap <buffer> r –∫
lnoremap <buffer> s —ã
lnoremap <buffer> t –µ
lnoremap <buffer> u –≥
lnoremap <buffer> v –º
lnoremap <buffer> w —Ü
lnoremap <buffer> x —á
lnoremap <buffer> y –Ω
lnoremap <buffer> z —è
lnoremap <buffer> { –•
lnoremap <buffer> } –™
lnoremap <buffer> ~ –Å
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=russian-jcukenwin
setlocal noarabic
setlocal autoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal cindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal comments=sO:*\ -,mO:*\ \ ,exO:*/,s1:/*,mb:*,ex:*/,://
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t,i
setlocal completefunc=
setlocal nocopyindent
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'cpp'
setlocal filetype=cpp
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
set foldlevel=99
setlocal foldlevel=99
setlocal foldmarker={{{,}}}
set foldmethod=indent
setlocal foldmethod=indent
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=0
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e
setlocal infercase
setlocal iskeyword=@,48-57,_,128-167,224-235
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
set list
setlocal list
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=omni#cpp#complete#Main
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal smartindent
setlocal softtabstop=2
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'cpp'
setlocal syntax=cpp
endif
setlocal tabstop=8
setlocal tags=
setlocal textwidth=74
setlocal thesaurus=
setlocal nowinfixheight
setlocal nowinfixwidth
set nowrap
setlocal nowrap
setlocal wrapmargin=0
60
normal zo
112
normal zo
114
normal zo
127
normal zo
114
normal zo
112
normal zo
60
normal zo
let s:l = 127 - ((29 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
127
normal! 044l
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . s:sx
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
